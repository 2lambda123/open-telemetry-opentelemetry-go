// Code generated by "go.opentelemetry.io/otel/sdk/resource/internal/schema/gen"; DO NOT EDIT.
// Copyright The OpenTelemetry Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package schema

import (
	ast10 "go.opentelemetry.io/otel/schema/v1.0/ast"
	types10 "go.opentelemetry.io/otel/schema/v1.0/types"
	"go.opentelemetry.io/otel/schema/v1.1/ast"
	"go.opentelemetry.io/otel/schema/v1.1/types"
)

var Schemas = map[string]*ast.Schema {
{{- range . }}
	"{{ .Schema.SchemaURL }}": {
		FileFormat: "{{ .Schema.FileFormat }}",
		SchemaURL: "{{ .Schema.SchemaURL }}",
		Versions: map[types.TelemetryVersion]ast.VersionDef{
		{{- range $ver, $def := .Schema.Versions }}
			"{{ $ver }}": {
				All: {{ template "ast10Attributes" $def.All }},
				Resources: {{ template "ast10Attributes" $def.Resources }},
				Spans: {{ template "ast10Spans" $def.Spans }},
				SpanEvents: {{ template "ast10SpanEvents" $def.SpanEvents }},
				Logs: {{ template "ast10Logs" $def.Logs }},
				Metrics: {{ template "metrics" $def.Metrics }},
			},
		{{- end }}
		},
	},
{{- end -}}
}

{{- define "ast10Attributes" }}ast10.Attributes{
	{{- if .Changes }}
	Changes: []ast10.AttributeChange{
		{{- range .Changes }}
		{
			RenameAttributes: &ast10.RenameAttributes{
			{{- with .RenameAttributes }}
				AttributeMap: {{- template "strStrMap" .AttributeMap }},
			{{- end }}
			},
		},
		{{- end }}
	},
}
	{{- else -}}
}
	{{- end -}}
{{- end }}

{{- define "ast10Spans" }}ast10.Spans{
	{{- if .Changes }}
	Changes: []ast10.SpansChange{
		{{- range .Changes }}
		{
			RenameAttributes: &ast10.AttributeMapForSpans{
			{{- with .RenameAttributes }}
				ApplyToSpans: {{- template "ast10SpanName" .ApplyToSpans }},
				AttributeMap: {{- template "strStrMap" .AttributeMap }},
			{{- end }}
			},
		},
		{{- end }}
	},
}
	{{- else -}}
}
	{{- end -}}
{{- end }}

{{- define "ast10SpanEvents" }}ast10.SpanEvents{
	{{- if .Changes }}
	Changes: []ast10.SpanEventsChange{
		{{- range .Changes }}
		{
			RenameEvents: &ast10.RenameSpanEvents{
			{{- with .RenameEvents }}
				EventNameMap: {{- template "strStrMap" .EventNameMap }},
			{{- end }}
			},
			RenameAttributes: &ast10.RenameSpanEventAttributes{
			{{- with .RenameAttributes }}
				ApplyToSpans: {{- template "ast10SpanName" .ApplyToSpans }},
				ApplyToEvents: {{- template "ast10EventName" .ApplyToSpans }},
				AttributeMap: {{- template "strStrMap" .AttributeMap }},
			{{- end }}
			},
		},
		{{- end }}
	},
}
	{{- else -}}
}
	{{- end -}}
{{- end }}

{{- define "ast10Logs" }}ast10.Logs{
	{{- if .Changes }}
	Changes: []ast10.LogsChange{
		{{- range .Changes }}
		{
			RenameAttributes: &ast10.RenameAttributes{
			{{- with .RenameAttributes }}
				AttributeMap: {{- template "strStrMap" .AttributeMap }},
			{{- end }}
			},
		},
		{{- end }}
	},
}
	{{- else -}}
}
	{{- end -}}
{{- end }}

{{- define "metrics" }}ast.Metrics{
	{{- if .Changes }}
	Changes: []ast.MetricsChange{
		{{- range .Changes }}
		{
			RenameMetrics: map[types10.MetricName]types10.MetricName{
			{{- with .RenameMetrics }}
				{{- if . }}
					{{ range $key, $val := . }}"{{ $key }}": "{{ $val }}",
					{{ end }}
				{{- end }}
			{{- end }}
			},
			RenameAttributes: &ast10.AttributeMapForMetrics{
			{{- with .RenameAttributes }}
				ApplyToMetrics: {{- template "ast10MetricName" .ApplyToMetrics }},
				AttributeMap: {{- template "strStrMap" .AttributeMap }},
			{{- end }}
			},
			Split: &ast.SplitMetric{
			{{- with .Split }}
				ApplyToMetric: "{{ .ApplyToMetric }}",
				ByAttribute: "{{ .ByAttribute }}",
				MetricsFromAttributes: map[types10.MetricName]types11.AttributeValue{
				{{- with .MetricsFromAttributes }}
					{{- if . }}
						{{ range $key, $val := . }}"{{ $key }}": "{{ $val }}",
						{{ end }}
					{{- end  }}
				{{- end  }}
				},
			{{- end }}
			},
		},
		{{- end }}
	},
}
	{{- else -}}
}
	{{- end -}}
{{- end }}

{{- define "ast10SpanName" }}[]types10.SpanName{
	{{- if . }}
		{{ range . }}"{{ . }}",
		{{ end }}
	{{- end  }}
}
{{- end }}

{{- define "ast10EventName" }}[]types10.EventName{
	{{- if . }}
		{{ range . }}"{{ . }}",
		{{ end }}
	{{- end  }}
}
{{- end }}

{{- define "ast10MetricName" }}[]types10.MetricName{
	{{- if . }}
		{{ range . }}"{{ . }}",
		{{ end }}
	{{- end  }}
}
{{- end }}

{{- define "strStrMap" }}map[string]string{
	{{- if . }}
		{{ range $key, $val := . }}"{{ $key }}": "{{ $val }}",
		{{ end }}
	{{- end  }}
}
{{- end }}

