// Code generated by "stringer -type=Kind,MetricValueKind"; DO NOT EDIT.

package metric

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Invalid-0]
	_ = x[CounterKind-1]
	_ = x[GaugeKind-2]
	_ = x[MeasureKind-3]
	_ = x[ObserverKind-4]
}

const _Kind_name = "InvalidCounterKindGaugeKindMeasureKindObserverKind"

var _Kind_index = [...]uint8{0, 7, 18, 27, 38, 50}

func (i Kind) String() string {
	if i < 0 || i >= Kind(len(_Kind_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kind_name[_Kind_index[i]:_Kind_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AnyValueKind-0]
	_ = x[Int64ValueKind-1]
	_ = x[Float64ValueKind-2]
}

const _MetricValueKind_name = "AnyValueKindInt64ValueKindFloat64ValueKind"

var _MetricValueKind_index = [...]uint8{0, 12, 26, 42}

func (i MetricValueKind) String() string {
	if i < 0 || i >= MetricValueKind(len(_MetricValueKind_index)-1) {
		return "MetricValueKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MetricValueKind_name[_MetricValueKind_index[i]:_MetricValueKind_index[i+1]]
}
