// Copyright The OpenTelemetry Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
gocpy copies Go source code.
The copied code is marked as generated.

Usage:

	gocpy [flags]

The flags are:

	-dest
	    The destination filepath.
	-pkg
	    The destination package name (can contain comments).
	-src
	    The source filepath.
*/
package main

import (
	"bufio"
	"flag"
	"log"
	"os"
	"strings"
)

var (
	dest = flag.String("dest", "", "The destination filepath.")
	pkg  = flag.String("pkg", "", "The destination package name (can contain comments).")
	src  = flag.String("src", "", "The source filepath.")
)

func main() {
	flag.Parse()
	if err := Copy(*dest, *pkg, *src); err != nil {
		log.Fatalln(err)
	}
}

// Copy copies a Go file from src to dst
// with package renamed to pkg.
func Copy(dest, pkg, src string) error {
	inFile, err := os.Open(src)
	if err != nil {
		return err
	}
	defer inFile.Close()

	outFile, err := os.Create(dest)
	if err != nil {
		return err
	}
	defer outFile.Close()

	w := bufio.NewWriter(outFile)
	if _, err := w.WriteString("// Code generated by gocpy. DO NOT EDIT.\n\n"); err != nil {
		return err
	}

	scanner := bufio.NewScanner(inFile)
	for scanner.Scan() {
		txt := scanner.Text()

		if strings.HasPrefix(txt, "package ") {
			if _, err := w.WriteString("package " + pkg + "\n"); err != nil {
				return err
			}
			continue
		}

		if _, err := w.WriteString(txt + "\n"); err != nil {
			return err
		}
	}
	if err := w.Flush(); err != nil {
		return err
	}

	return scanner.Err()
}
